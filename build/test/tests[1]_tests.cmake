add_test([=[LinearAlgebra.TensorCreation1]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorCreation1]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorCreation1]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorCreation2]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorCreation2]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorCreation2]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorCreation3]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorCreation3]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorCreation3]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorSetValues]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorSetValues]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorSetValues]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorSetConstant]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorSetConstant]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorSetConstant]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorSetRandom]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorSetRandom]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorSetRandom]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorGetReversed]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorGetReversed]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorGetReversed]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorGetSlice]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorGetSlice]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorGetSlice]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorGetBlock]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorGetBlock]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorGetBlock]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorSetSlice]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorSetSlice]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorSetSlice]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorSetBlock]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorSetBlock]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorSetBlock]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorMultiplication1]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorMultiplication1]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorMultiplication1]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.TensorMultiplication2]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.TensorMultiplication2]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.TensorMultiplication2]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.MatrixMultiplication1]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.MatrixMultiplication1]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.MatrixMultiplication1]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.MatrixMultiplication2]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.MatrixMultiplication2]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.MatrixMultiplication2]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.VectorCreation]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.VectorCreation]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.VectorCreation]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[LinearAlgebra.VectorMultiplitation]=]  D:/dev/MLL/build/test/Debug/tests.exe [==[--gtest_filter=LinearAlgebra.VectorMultiplitation]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[LinearAlgebra.VectorMultiplitation]=]  PROPERTIES WORKING_DIRECTORY D:/dev/MLL/build/test SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  tests_TESTS LinearAlgebra.TensorCreation1 LinearAlgebra.TensorCreation2 LinearAlgebra.TensorCreation3 LinearAlgebra.TensorSetValues LinearAlgebra.TensorSetConstant LinearAlgebra.TensorSetRandom LinearAlgebra.TensorGetReversed LinearAlgebra.TensorGetSlice LinearAlgebra.TensorGetBlock LinearAlgebra.TensorSetSlice LinearAlgebra.TensorSetBlock LinearAlgebra.TensorMultiplication1 LinearAlgebra.TensorMultiplication2 LinearAlgebra.MatrixMultiplication1 LinearAlgebra.MatrixMultiplication2 LinearAlgebra.VectorCreation LinearAlgebra.VectorMultiplitation)
